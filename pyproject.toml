[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "stringx"
description = "STRING DB API Client"
authors = [{ name = "Hugo Cachitas", email = "hcachitas@gmail.com" }]
dependencies = ["httpx>=0.27.0"]
requires-python = ">=3.9"
readme = "README.md"
keywords = [
    "string",
    "api",
    "client",
    "httpx",
    "sib",
    "cpr",
    "embl",
    "biodata",
    "elixir",
    "protein",
    "gene",
    "interaction",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Typing :: Typed",
]
license = { text = "MIT" }
dynamic = ["version"]

[project.urls]
Homepage = "https://pypi.org/project/stringx"
Repository = "https://github.com/cachitas/stringx"
Issues = "https://github.com/cachitas/stringx/issues"

[tool.pdm.dev-dependencies]
dev = [
    "tox-pdm>=0.7.2",
]
test = [
    "pytest>=8.1.1",
    "pytest-httpx>=0.30.0",
]
lint = [
    "ruff>=0.3.5",
    "mypy>=1.9.0",
]

[tool.pdm.version]
source = "file"
path = "src/stringx/client.py"

[tool.pdm.scripts]
test = "pytest"
tox = "tox"
# coverage = { shell = """\
#                     python -m pytest \
#                               --verbosity=3 \
#                               --cov=src/pdm \
#                               --cov-branch \
#                               --cov-report term-missing \
#                               tests/
#                     """ }

[tool.isort]
profile = "black"

[tool.ruff]
lint.select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "E",  # pycodestyle - Error
    "F",  # Pyflakes
    "I",  # isort
    "W",  # pycodestyle - Warning
    "UP", # pyupgrade
]
extend-include = ["*.ipynb"]

[tool.mypy]
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
xfail_strict = true
markers = ["network: tests that need network", "integration: integration tests"]

[tool.semantic_release]
major_on_zero = true
allow_zero_version = true
tag_format = "v{version}"
version_variables = ["src/stringx/client.py:__version__"]
build_command = "pdm build"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.remote]
ignore_token_for_push = true
